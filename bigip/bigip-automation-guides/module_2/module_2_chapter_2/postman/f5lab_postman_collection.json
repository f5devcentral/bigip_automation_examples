{
	"info": {
		"_postman_id": "96593e7e-d2ef-4189-900e-4e03648c9dd8",
		"name": "Agility Lab - BIG-IP HA in Public Cloud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "562029"
	},
	"item": [
		{
			"name": "Module 2 - Declarative Onboarding",
			"item": [
				{
					"name": "DO-1-A [bigip1] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/declarative-onboarding/info",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"declarative-onboarding",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "DO-1-B [bigip2] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/declarative-onboarding/info",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"declarative-onboarding",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "DO-2-A [bigip1] Get current config",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/declarative-onboarding/",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"declarative-onboarding",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "DO-2-B [bigip2] Get current config",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/declarative-onboarding/",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"declarative-onboarding",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 4 - Cloud Failover Extension",
			"item": [
				{
					"name": "CFE-1-A [bigip1] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/cloud-failover/info",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "CFE-1-B [bigip2] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/cloud-failover/info",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "CFE-2-A [bigip1] Configure cloud failover",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"aws\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"example01\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/cloud-failover/declare",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "CFE-2-B [bigip2] Configure cloud failover",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"aws\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"example01\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/cloud-failover/declare",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "CFE-3-A [bigip1] Cleanup - Clear cloud failover configuration (prep for next module)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"class\": \"Cloud_Failover\",\r\n    \"environment\": \"aws\"\r\n}"
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/cloud-failover/declare",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "CFE-3-B [bigip2] Cleanup - Clear cloud failover configuration (prep for next module)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"class\": \"Cloud_Failover\",\r\n    \"environment\": \"aws\"\r\n}"
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/cloud-failover/declare",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"cloud-failover",
								"declare"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 5 - HA via LB",
			"item": [
				{
					"name": "Prep for Active-Active BIG-IP",
					"item": [
						{
							"name": "Prep-1-A [bigip1] Disable active-standby failover (make active-active)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\":\"run\",\n    \"name\":\"Root\",\n    \"caDevice\":true,\n    \"device\":\"{{bigip1_mgmt_ip}}\",\n    \"deviceName\":\"{{bigip1_hostname}}\",\n    \"username\":\"admin\",\n    \"password\":\"{{bigip_admin_password}}\",\n    \"devicesReference\":{\"items\":[]}\n}"
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/cm/device-group/failoverGroup",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"tm",
										"cm",
										"device-group",
										"failoverGroup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Failover Test",
					"item": [
						{
							"name": "BIG-IP #1",
							"item": [
								{
									"name": "NLB-1-A [bigip1] Check For Virtual Server Example01a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-2-A [bigip1] Disable Virtual Server Example01a",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"disabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-3-A [bigip1] Check For Virtual Server Example01b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-4-A [bigip1] Disable Virtual Server Example01b",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"disabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-5-A [bigip1] Enable Virtual Server Example01a",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"enabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-6-A [bigip1] Enable Virtual Server Example01b",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"enabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BIG-IP #2",
							"item": [
								{
									"name": "NLB-1-B [bigip2] Check For Virtual Server Example01a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-2-B [bigip2] Disable Virtual Server Example01a",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"disabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-3-B [bigip2] Check For Virtual Server Example01b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-4-B [bigip2] Disable Virtual Server Example01b",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"disabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-5-B [bigip2] Enable Virtual Server Example01a",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"enabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01a",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01a"
											]
										}
									},
									"response": []
								},
								{
									"name": "NLB-6-B [bigip2] Enable Virtual Server Example01b",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"enabled\":true}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/ltm/virtual/~Example01~Shared~example01b",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"virtual",
												"~Example01~Shared~example01b"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Module 6 - Telemetry Streaming",
			"item": [
				{
					"name": "TS-1-A [bigip1] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/telemetry/info",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"telemetry",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "TS-1-B [bigip2] Get extension status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/telemetry/info",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"telemetry",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "TS-2-A [bigip1] Configure TS for CloudWatch",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"Telemetry\",\n    \"My_System\": {\n        \"class\": \"Telemetry_System\",\n        \"systemPoller\": {\n            \"interval\": 60\n        }\n    },\n    \"My_Listener\": {\n        \"class\": \"Telemetry_Listener\",\n        \"port\": 6514\n    },\n    \"My_Consumer\": {\n        \"class\": \"Telemetry_Consumer\",\n        \"type\": \"AWS_CloudWatch\",\n        \"region\": \"{{aws_region}}\",\n        \"logGroup\": \"studentf5labdev\",\n        \"logStream\": \"log-stream\",\n        \"username\": \"{{AWS_ACCESS_KEY_ID}}\",\n        \"passphrase\": {\n            \"cipherText\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/telemetry/declare",
							"protocol": "https",
							"host": [
								"{{bigip1_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"telemetry",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "TS-2-B [bigip2] Configure TS for CloudWatch",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{bigip_admin_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"Telemetry\",\n    \"My_System\": {\n        \"class\": \"Telemetry_System\",\n        \"systemPoller\": {\n            \"interval\": 60\n        }\n    },\n    \"My_Listener\": {\n        \"class\": \"Telemetry_Listener\",\n        \"port\": 6514\n    },\n    \"My_Consumer\": {\n        \"class\": \"Telemetry_Consumer\",\n        \"type\": \"AWS_CloudWatch\",\n        \"region\": \"{{aws_region}}\",\n        \"logGroup\": \"studentf5labdev\",\n        \"logStream\": \"log-stream\",\n        \"username\": \"{{AWS_ACCESS_KEY_ID}}\",\n        \"passphrase\": {\n            \"cipherText\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/telemetry/declare",
							"protocol": "https",
							"host": [
								"{{bigip2_mgmt_ip}}"
							],
							"path": [
								"mgmt",
								"shared",
								"telemetry",
								"declare"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Install F5 ATC Packages (DO alternative)",
					"item": [
						{
							"name": "Upload and Install to BIG-IP1",
							"item": [
								{
									"name": "Step 1: REST API - Upload DO iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{do_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: REST API - Install DO iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{do_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: REST API - Upload AS3 iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{as3_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: REST API - Install AS3 iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{as3_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: REST API - Upload CFE iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{cfe_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: REST API - Install CFE iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{cfe_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: REST API - Upload TS iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{ts_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: REST API - Install TS iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{ts_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip1_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.collectionVariables.set(\"bigip1_mgmt_ip\", pm.environment.get(\"bigip1_mgmt_ip\"));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Upload and Install to BIG-IP2",
							"item": [
								{
									"name": "Step 1: REST API - Upload DO iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{do_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: REST API - Install DO iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{do_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: REST API - Upload AS3 iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{as3_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: REST API - Install AS3 iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{as3_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: REST API - Upload CFE iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{cfe_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: REST API - Install CFE iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{cfe_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: REST API - Upload TS iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"command\": \"run\", \"utilCmdArgs\": \"-c \\\"cd /var/config/rest/downloads/ && curl -sk -LJO {{ts_url}}\\\"\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/tm/util/bash",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"tm",
												"util",
												"bash"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: REST API - Install TS iLX Package",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{bigip_admin_password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operation\":\"INSTALL\",\"packageFilePath\":\"/var/config/rest/downloads/{{ts_file}}\"\n}"
										},
										"url": {
											"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/iapp/package-management-tasks",
											"protocol": "https",
											"host": [
												"{{bigip2_mgmt_ip}}"
											],
											"path": [
												"mgmt",
												"shared",
												"iapp",
												"package-management-tasks"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"pm.collectionVariables.set(\"bigip2_mgmt_ip\", pm.environment.get(\"bigip2_mgmt_ip\"));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Module 3 - AS3 (F5 Extension alternative)",
					"item": [
						{
							"name": "AS3-1-A [bigip1] Get extension status",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "AS3-1-B [bigip2] Get extension status",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{bigip2_mgmt_ip}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{bigip2_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "AS3-2 [bigip1] Create AS3 - Example01/example01 with AutoDiscover pool members",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"ADC\",\n    \"schemaVersion\": \"3.11.0\",\n    \"label\": \"Converted Declaration\",\n    \"remark\": \"Auto-generated by Project Charon\",\n    \"Common\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"pool1\": {\n                \"class\": \"Pool\",\n                \"monitors\": [\n                    {\n                        \"bigip\": \"/Common/http\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"servicePort\": 80,\n                        \"addressDiscovery\": \"aws\",\n                        \"region\": \"{{aws_region}}\",\n                        \"updateInterval\": 20,\n                        \"tagKey\": \"findme\",\n                        \"tagValue\": \"web\",\n                        \"addressRealm\": \"private\",\n                        \"adminState\": \"enable\",\n                        \"autoPopulate\": true,\n                        \"enable\": true\n                    }\n                ]\n            }\n        }\n    },\n    \"Example01\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"example01a\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_TCP\",\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01a_service_address\"\n                    }\n                ],\n                \"virtualPort\": 80,\n                \"snat\": \"auto\"\n            },\n            \"example01a_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip1_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            },\n            \"example01b\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_TCP\",\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01b_service_address\"\n                    }\n                ],\n                \"virtualPort\": 80,\n                \"snat\": \"auto\"\n            },\n            \"example01b_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip2_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/appsvcs/declare?show=full",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									],
									"query": [
										{
											"key": "show",
											"value": "full"
										}
									]
								},
								"description": "AutoDiscover nodes will only join pool and light up green if dummy IP exists in declaration?\n\n                  {\n                        \"servicePort\": 80,\n                        \"serverAddresses\": [\n                            \"192.168.0.55\"\n                        ]\n                    }"
							},
							"response": []
						},
						{
							"name": "AS3-3 [bigip1] Create AS3 - Example01/example01 HA Modern Protocols",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"ADC\",\n    \"schemaVersion\": \"3.11.0\",\n    \"id\": \"urn:uuid:68bee3e5-0c0c-49ed-b7c4-778362a5520b\",\n    \"label\": \"Converted Declaration\",\n    \"remark\": \"Auto-generated by Project Charon\",\n    \"Common\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"pool1\": {\n                \"members\": [\n                    {\n                        \"servicePort\": 80,\n                        \"addressDiscovery\": \"aws\",\n                        \"region\": \"{{aws_region}}\",\n                        \"updateInterval\": 20,\n                        \"tagKey\": \"findme\",\n                        \"tagValue\": \"web\",\n                        \"addressRealm\": \"private\",\n                        \"adminState\": \"enable\",\n                        \"autoPopulate\": true,\n                        \"enable\": true\n                    }\n                ],\n                \"monitors\": [\n                    {\n                        \"bigip\": \"/Common/http\"\n                    }\n                ],\n                \"class\": \"Pool\"\n            }\n        }\n    },\n    \"Example01\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"certificate_default\": {\n                \"class\": \"Certificate\",\n                \"certificate\": {\n                    \"bigip\": \"/Common/default.crt\"\n                },\n                \"privateKey\": {\n                    \"bigip\": \"/Common/default.key\"\n                }\n            },\n            \"clientssl_secure_example01\": {\n                \"certificates\": [\n                    {\n                        \"certificate\": \"certificate_default\"\n                    }\n                ],\n                \"ciphers\": \"none\",\n                \"renegotiationEnabled\": false,\n                \"class\": \"TLS_Server\"\n            },\n            \"http2_example01\": {\n                \"class\": \"HTTP2_Profile\",\n                \"enforceTlsRequirements\": false\n            },\n            \"example01a\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01a_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\"\n            },\n            \"example01a_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip1_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            },\n            \"example01b\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01b_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\"\n            },\n            \"example01b_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip2_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/appsvcs/declare?show=full",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									],
									"query": [
										{
											"key": "show",
											"value": "full"
										}
									]
								},
								"description": "Works but I have to create the http2 profile first."
							},
							"response": []
						},
						{
							"name": "AS3-4 [bigip1] Create AS3 - Example01/example01 HA Modern Protocols",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"ADC\",\n    \"schemaVersion\": \"3.11.0\",\n    \"id\": \"urn:uuid:68bee3e5-0c0c-49ed-b7c4-778362a5520b\",\n    \"label\": \"Converted Declaration\",\n    \"remark\": \"Auto-generated by Project Charon\",\n    \"Common\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"pool1\": {\n                \"members\": [\n                    {\n                        \"servicePort\": 80,\n                        \"addressDiscovery\": \"aws\",\n                        \"region\": \"{{aws_region}}\",\n                        \"updateInterval\": 20,\n                        \"tagKey\": \"findme\",\n                        \"tagValue\": \"web\",\n                        \"addressRealm\": \"private\",\n                        \"adminState\": \"enable\",\n                        \"autoPopulate\": true,\n                        \"enable\": true\n                    }\n                ],\n                \"monitors\": [\n                    {\n                        \"bigip\": \"/Common/http\"\n                    }\n                ],\n                \"class\": \"Pool\"\n            }\n        }\n    },\n    \"Example01\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"certificate_default\": {\n                \"class\": \"Certificate\",\n                \"certificate\": {\n                    \"bigip\": \"/Common/default.crt\"\n                },\n                \"privateKey\": {\n                    \"bigip\": \"/Common/default.key\"\n                }\n            },\n            \"clientssl_secure_example01\": {\n                \"certificates\": [\n                    {\n                        \"certificate\": \"certificate_default\"\n                    }\n                ],\n                \"ciphers\": \"none\",\n                \"renegotiationEnabled\": false,\n                \"class\": \"TLS_Server\"\n            },\n            \"http2_example01\": {\n                \"class\": \"HTTP2_Profile\",\n                \"enforceTlsRequirements\": false\n            },\n            \"example01a\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01a_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\",\n                \"profileHTTP2\": {\n                    \"bigip\": \"/Example01/Shared/http2_example01\"\n                }\n            },\n            \"example01a_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip1_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            },\n            \"example01b\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01b_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\",\n                \"profileHTTP2\": {\n                    \"bigip\": \"/Example01/Shared/http2_example01\"\n                }\n            },\n            \"example01b_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip2_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/appsvcs/declare?show=full",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									],
									"query": [
										{
											"key": "show",
											"value": "full"
										}
									]
								},
								"description": "Works but I have to create the http2 profile first."
							},
							"response": []
						},
						{
							"name": "AS3-5 [bigip1] Create AS3 - Example01/example01 ECDSA Cert",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{bigip_admin_password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"ADC\",\n    \"schemaVersion\": \"3.11.0\",\n    \"id\": \"urn:uuid:68bee3e5-0c0c-49ed-b7c4-778362a5520b\",\n    \"label\": \"Converted Declaration\",\n    \"remark\": \"Auto-generated by Project Charon\",\n    \"Common\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"pool1\": {\n                \"members\": [\n                    {\n                        \"servicePort\": 80,\n                        \"addressDiscovery\": \"aws\",\n                        \"region\": \"{{aws_region}}\",\n                        \"updateInterval\": 20,\n                        \"tagKey\": \"findme\",\n                        \"tagValue\": \"web\",\n                        \"addressRealm\": \"private\",\n                        \"adminState\": \"enable\",\n                        \"autoPopulate\": true,\n                        \"enable\": true\n                    }\n                ],\n                \"monitors\": [\n                    {\n                        \"bigip\": \"/Common/http\"\n                    }\n                ],\n                \"class\": \"Pool\"\n            }\n        }\n    },\n    \"Example01\": {\n        \"class\": \"Tenant\",\n        \"Shared\": {\n            \"class\": \"Application\",\n            \"template\": \"shared\",\n            \"certificate_default\": {\n                \"class\": \"Certificate\",\n                \"certificate\": {\n                    \"bigip\": \"/Common/default.crt\"\n                },\n                \"privateKey\": {\n                    \"bigip\": \"/Common/default.key\"\n                }\n            },\n            \"clientssl_secure_example01a\": {\n                \"certificates\": [\n                    {\n                        \"certificate\": \"webcert1a\"\n                    }\n                ],\n                \"renegotiationEnabled\": false,\n                \"class\": \"TLS_Server\"\n            },\n            \"webcert1a\": {\n                \"class\": \"Certificate\",\n                \"remark\": \"in practice we recommend using a passphrase\",\n                \"certificate\": \"{{example01a_cert}}\",\n                \"privateKey\": \"{{example01a_key}}\"\n            },\n            \"clientssl_secure_example01b\": {\n                \"certificates\": [\n                    {\n                        \"certificate\": \"webcert1b\"\n                    }\n                ],\n                \"renegotiationEnabled\": false,\n                \"class\": \"TLS_Server\"\n            },\n            \"webcert1b\": {\n                \"class\": \"Certificate\",\n                \"remark\": \"in practice we recommend using a passphrase\",\n                \"certificate\": \"{{example01b_cert}}\",\n                \"privateKey\": \"{{example01b_key}}\"\n            },\n            \"http2_example01\": {\n                \"class\": \"HTTP2_Profile\",\n                \"enforceTlsRequirements\": false\n            },\n            \"example01a\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01a\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01a_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\",\n                \"profileHTTP2\": {\n                    \"bigip\": \"/Example01/Shared/http2_example01\"\n                }\n            },\n            \"example01a_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip1_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            },\n            \"example01b\": {\n                \"remark\": \"basic standard virtual server\",\n                \"layer4\": \"tcp\",\n                \"pool\": \"/Common/Shared/pool1\",\n                \"translateServerAddress\": true,\n                \"translateServerPort\": true,\n                \"class\": \"Service_HTTPS\",\n                \"profileHTTP\": {\n                    \"bigip\": \"/Common/http\"\n                },\n                \"profileMultiplex\": {\n                    \"bigip\": \"/Common/oneconnect\"\n                },\n                \"profileTCP\": {\n                    \"bigip\": \"/Common/tcp\"\n                },\n                \"serverTLS\": \"clientssl_secure_example01b\",\n                \"virtualAddresses\": [\n                    {\n                        \"use\": \"example01b_service_address\"\n                    }\n                ],\n                \"virtualPort\": 443,\n                \"snat\": \"auto\",\n                \"profileHTTP2\": {\n                    \"bigip\": \"/Example01/Shared/http2_example01\"\n                }\n            },\n            \"example01b_service_address\": {\n                \"class\": \"Service_Address\",\n                \"virtualAddress\": \"{{bigip2_example01_address}}\",\n                \"arpEnabled\": true,\n                \"icmpEcho\": \"enable\",\n                \"routeAdvertisement\": \"enable\",\n                \"spanningEnabled\": false,\n                \"trafficGroup\": \"none\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "https://{{bigip1_mgmt_ip}}/mgmt/shared/appsvcs/declare?show=full",
									"protocol": "https",
									"host": [
										"{{bigip1_mgmt_ip}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									],
									"query": [
										{
											"key": "show",
											"value": "full"
										}
									]
								},
								"description": "Works but I have to move the \"No TLSV1.3\" out of the Enabled Options list. How can I make the clientssl-secure the parent profile instead of clientssl?"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Cloud Failover Extension (CFE) - Examples",
					"item": [
						{
							"name": "declare",
							"item": [
								{
									"name": "examples",
									"item": [
										{
											"name": "(AWS) Update configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"aws\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"response": [
												{
													"name": "Configuration response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"aws\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=UTF-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"aws\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "(AZURE) Update configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"response": [
												{
													"name": "Configuration response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=UTF-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "(GCP) Update configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"gcp\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"response": [
												{
													"name": "Configuration response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"gcp\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=UTF-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"gcp\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/declare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"declare"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/declare",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"declare"
											]
										}
									},
									"response": [
										{
											"name": "Configuration Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/declare",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"declare"
											]
										}
									},
									"response": [
										{
											"name": "Configuration response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"class\": \"Cloud_Failover\",\n    \"environment\": \"azure\",\n    \"externalStorage\": {\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverAddresses\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        }\n    },\n    \"failoverRoutes\": {\n        \"enabled\": true,\n        \"scopingTags\": {\n            \"f5_cloud_failover_label\": \"mydeployment\"\n        },\n        \"scopingAddressRanges\": [\n            {\n                \"range\": \"192.0.2.0/24\"\n            }\n        ],\n        \"defaultNextHopAddresses\": {\n            \"discoveryType\": \"static\",\n            \"items\": [\n                \"192.0.2.10\",\n                \"192.0.2.11\"\n            ]\n        }\n    },\n    \"controls\": {\n        \"class\": \"Controls\",\n        \"logLevel\": \"info\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/declare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"declare"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "trigger",
							"item": [
								{
									"name": "Trigger failover",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"dry-run\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trigger"
											]
										},
										"description": "Primarily supported action is dry-run, which returns objects and resources that are updated if failover is triggered. WARNING: Do not use the execute action, it is for use by BIG-IP only."
									},
									"response": [
										{
											"name": "Configuration response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"dry-run\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failover task failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"dry-run\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"dry-run\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskState\": \"FAILED\",\n \"message\": \"Failover Unexpected Error\",\n \"code\": 500\n}"
										}
									]
								},
								{
									"name": "Show triggered failover task status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trigger"
											]
										}
									},
									"response": [
										{
											"name": "Successful failover task",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failover task is running",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskState\": \"RUNNING\",\n \"message\": \"Failover running\",\n \"timestamp\": \"2019-09-25T22:12:52.137Z\",\n \"instance\": \"failover1.local\",\n \"failoverOperations\": {\n  \"routes\": {},\n  \"addresses\": {}\n },\n \"code\": 202\n}"
										},
										{
											"name": "Failed failover task",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trigger"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskState\": \"FAILED\",\n \"message\": \"Failover Unexpected Error\",\n \"code\": 500\n}"
										}
									]
								}
							]
						},
						{
							"name": "List extension information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"info"
									]
								}
							},
							"response": [
								{
									"name": "Information Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"info"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Reset failover state file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resetStateFile\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reset"
									]
								}
							},
							"response": [
								{
									"name": "Reset State Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetStateFile\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetStateFile\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reset"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "List associated cloud objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inspect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inspect"
									]
								}
							},
							"response": [
								{
									"name": "Inspect Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inspect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inspect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inspect"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "do_url",
			"value": "https://github.com/F5Networks/f5-declarative-onboarding/releases/download/v1.36.0/{{do_file}}"
		},
		{
			"key": "as3_url",
			"value": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.43.0/{{as3_file}}"
		},
		{
			"key": "cfe_url",
			"value": "https://github.com/F5Networks/f5-cloud-failover-extension/releases/download/v1.14.0/{{cfe_file}}"
		},
		{
			"key": "ts_url",
			"value": "https://github.com/F5Networks/f5-telemetry-streaming/releases/download/v1.32.0/{{ts_file}}"
		},
		{
			"key": "do_file",
			"value": "f5-declarative-onboarding-1.36.0-4.noarch.rpm"
		},
		{
			"key": "as3_file",
			"value": "f5-appsvcs-3.43.0-2.noarch.rpm"
		},
		{
			"key": "cfe_file",
			"value": "f5-cloud-failover-1.14.0-0.noarch.rpm"
		},
		{
			"key": "ts_file",
			"value": "f5-telemetry-1.32.0-2.noarch.rpm"
		}
	]
}